// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
import {quantaHighlight} from "./highlight"
const spec_Name = {__proto__:null,func:14, bool:24, char:24, int:24, float:24, global:32, if:42, else:48, for:54, in:58, while:64, return:70, Color:78, Key:82}
export const parser = LRParser.deserialize({
  version: 14,
  states: ".WQQOPOOOOOO'#C^'#C^OOOO'#Ca'#CaO{OPO'#CdOOOO'#Cg'#CgO$eOPO'#C`OOOO'#Ck'#CkO$jOPO'#CjO$oOPO'#CmOOOO'#Cp'#CpO$tOPO'#CoOOOO'#Cv'#CvOTOPO'#CuOOOO'#C{'#C{O$yOPO'#CzOOOO'#DO'#DOOTOPO'#C}OOOO'#DS'#DSOOOO'#DU'#DUO&YOPO'#DhOOOO'#Di'#DiOOOO'#Dh'#DhOOOO'#Dc'#DcQQOPOOOOOO'#Cd'#CdO'YOPO,58zO'_OPO'#CiOOOO,59U,59UO'fOPO,59XOTOPO,59ZO'mOPO,59aOTOPO,59fO'tOPO,59iOOOO'#DX'#DXOOOO'#DY'#DYOOOO'#D['#D[OOOO'#D]'#D]OOOO'#D^'#D^OOOO'#D_'#D_OOOO'#D`'#D`OOOO'#Da'#DaOOOO'#Db'#DbOTOPO,59rOTOPO,59rOTOPO,59rOTOPO,59rOTOPO,59rOTOPO,59rOTOPO,59rOTOPO,59rOTOPO,59rOOOO-E7a-E7aO)TOPO1G.fO)]OPO'#DeO*YOPO,59TOOOO,59T,59TO*aOPO'#CnOOOO1G.s1G.sO*kOPO1G.sO*pOPO1G.uOOOO'#Cx'#CxOTOPO1G.{O*wOPO1G/QO-_OPO1G/^OOOO1G/^1G/^O-iOPO1G/^O0VOPO1G/^O0^OPO1G/^O2wOPO1G/^O3OOPO1G/^O5iOPO1G/^O5pOPO1G/^O5wOPO'#CfO5|OPO'#CeO$jOPO7+$QO6UOPO7+$QOOOO-E7c-E7cOOOO1G.o1G.oOTOPO'#DfO6ZOPO,59YOOOO7+$_7+$_O$jOPO7+$aO6cOPO7+$gO$jOPO7+$lOOOO,59Q,59QO6jOPO'#DdO6oOPO,59POOOO<<Gl<<GlO$jOPO<<GlO6wOPO,5:QOOOO-E7d-E7dO7ROPO<<G{OOOO<<HR<<HROOOO<<HW<<HWOOOO,5:O,5:OOOOO-E7b-E7bOOOOAN=WAN=WOOOO'#Cs'#CsO$jOPO'#CrOOOOAN=gAN=gOOOO,59^,59^",
  stateData: "9r~ORPOUROVQO[SO`UOeXOkZOp]Os_OtdOudOwaOybO~OR!]XU!]XV!]X[!]X`!]Xe!]Xk!]Xp!]Xs!]Xt!]Xu!]Xw!]Xy!]X}!]X!Z!]X!^WX!c!]X!d!]X!e!]X!f!]X!g!]X!h!]X!i!]X!j!]X!k!]X!l!]X!m!]X!n!]X!o!]X!p!]X!q!]X!r!]X!s!]Xm!]X!b!]X!_!]X!`!]X!a!]X~OUhO~O!ajO~O!^lO~O!^mO~O!^oO~O}rO!cqO!dqO!erO!frO!gsO!hsO!itO!juO!kvO!lwO!mwO!nwO!owO!pwO!qwO!rxO!syO~OR![XU![XV![X[![X`![Xe![Xk![Xp![Xs![Xt![Xu![Xw![Xy![X!Z![X~P%OO!^!UO~O!b!XO~PTO!`!ZO~PTOm!^O~P%OORqaUqaVqa[qa`qaeqakqapqasqatqauqawqayqa!Zqamqa!bqa!_qa!`qa!aqa~P%OO[SO!`!lO~OU!XXV!XX[!XX`!XXe!XXk!XXp!XXs!XXt!XXu!XXw!XXy!XX!b!XX~P%OO!b!oO~PTO!_!pO!`bX~P%OO!`!rO~O!`!sO~P%OO!`!uO~P%OO}rO!erO!frORziUziVzi[zi`ziezikzipziszitziuziwziyzi!Zzi!gzi!hzi!izi!jzi!kzi!lzi!mzi!nzi!ozi!pzi!qzi!rzi!szimzi!bzi!_zi!`zi!azi~O!czi!dzi~P+OO!cqO!dqO~P+OO}rO!cqO!dqO!erO!frO!gsO!hsORziUziVzi[zi`ziezikzipziszitziuziwziyzi!Zzi!jzi!kzi!lzi!mzi!nzi!ozi!pzi!qzi!rzi!szimzi!bzi!_zi!`zi!azi~O!izi~P-sO!itO~P-sO}rO!cqO!dqO!erO!frO!gsO!hsO!itO!juORziUziVzi[zi`ziezikzipziszitziuziwziyzi!Zzi!lzi!mzi!nzi!ozi!pzi!qzi!rzi!szimzi!bzi!_zi!`zi!azi~O!kzi~P0eO!kvO~P0eO}rO!cqO!dqO!erO!frO!gsO!hsO!itO!juO!kvO!lwO!mwO!nwO!owO!pwO!qwORziUziVzi[zi`ziezikzipziszitziuziwziyzi!Zzi!szimzi!bzi!_zi!`zi!azi~O!rzi~P3VO!rxO~P3VOU!vO~O!_!wO!`XX~O!`!zO~O!_!pO!`ba~O!ajO~P%OO[SO~O!_!wO!`Xa~O!_!Ya!`!Ya~P%OOh#TORcyUcyVcy[cy`cyecykcypcyscytcyucywcyycy}cy!Zcy!ccy!dcy!ecy!fcy!gcy!hcy!icy!jcy!kcy!lcy!mcy!ncy!ocy!pcy!qcy!rcy!scymcy!bcy!_cy!`cy!acy~OUutR}t~",
  goto: ",i!^PP!_P!c!yPP#a#z#}$TP$o!c%UP!c%l!c%oP&V&YP!c&]P&sP!c&vP!c'^PPP!cP!cP!c't(WP(k(|)^)m){*Y*f*q*w*}+TP+Z+_TeOgydO[`gjlmoz{|}!O!P!Q!R!S!W!_!pyTO[`gjlmoz{|}!O!P!Q!R!S!W!_!pxWO[`gjlmoz{|}!O!P!Q!R!S!W!_!pRiTR!m!UQ!k!UR#Q!wxdO[`gjlmoz{|}!O!P!Q!R!S!W!_!pT!j!U!wQkVQ!y!lQ!}!sQ#O!tQ#P!uQ#S!zR#W#UyVO[`gjlmoz{|}!O!P!Q!R!S!W!_!pR![lyYO[`gjlmoz{|}!O!P!Q!R!S!W!_!pR#V!}R#U!}y[O[`gjlmoz{|}!O!P!Q!R!S!W!_!pR!_ny^O[`gjlmoz{|}!O!P!Q!R!S!W!_!py`O[`gjlmoz{|}!O!P!Q!R!S!W!_!pqzcnp!V!Y!]!`!c!d!e!f!g!h!i!t!{s{cnp!V!Y!]!`!a!c!d!e!f!g!h!i!t!{o|cnp!V!Y!]!`!d!e!f!g!h!i!t!{m}cnp!V!Y!]!`!e!f!g!h!i!t!{k!Ocnp!V!Y!]!`!f!g!h!i!t!{i!Pcnp!V!Y!]!`!g!h!i!t!{g!Qcnp!V!Y!]!`!h!i!t!{e!Rcnp!V!Y!]!`!i!t!{c!Scnp!V!Y!]!`!t!{QgOR!TgQ!x!kR#R!xQ!WjR!n!WQ!q!YR!|!qTfOgScOgQn[Qp`S!Vj!WQ!YlQ!]mQ!`oQ!azQ!b{Q!c|Q!d}Q!e!OQ!f!PQ!g!QQ!h!RQ!i!SQ!t!_R!{!p",
  nodeNames: "âš  Program Comment CommentInfo Function Func Name Func FuncName Args Arg Type Type Block GlobalBlock Global Global FunctionCall Params IfExpression If If ElseExpression Else Else ForExpression For For In In WhileExpression While While ReturnExpression Return Return Number Float Color Color Key Key BinaryExpression ArithOp ArithOp Division BitOp BitOp BitOp BitOp CompareOp LogicOp LogicOp",
  maxTerm: 81,
  propSources: [quantaHighlight],
  skippedNodes: [0],
  repeatNodeCount: 4,
  tokenData: "'O~Rdqr!auv!lvw!qxy#Oyz#Tz{#Y{|#_|}#d}!O#i!P!Q#n!Q![$_!^!_$x!_!`%_!`!a%j!c!}&P#Q#R&b#T#o&P#o#p&g#p#q&l#q#r&y~!dP!_!`!g~!lO!q~~!qO!f~~!vP!i~vw!y~#OO!r~~#TO!^~~#YO!`~~#_O!e~~#dO!c~~#iO!_~~#nO!d~~#sP}~!P!Q#v~#{SR~OY#vZ;'S#v;'S;=`$X<%lO#v~$[P;=`<%l#v~$dQt~!O!P$j!Q![$_~$mP!Q![$p~$uPu~!Q![$p~$}Q!n~!^!_%T!_!`%Y~%YO!g~~%_O!o~~%bP!_!`%e~%jO!p~~%oQ!l~!_!`%u!`!a%z~%zO!m~~&PO!h~~&USU~!Q![&P!c!}&P#R#S&P#T#o&P~&gO!j~~&lO!a~~&qP!k~#p#q&t~&yO!s~~'OO!b~",
  tokenizers: [0],
  topRules: {"Program":[0,1]},
  specialized: [{term: 6, get: (value) => spec_Name[value] || -1}],
  tokenPrec: 1131
})
